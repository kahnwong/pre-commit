- id: cargo-check
  name: 'cargo check'
  entry: ./hooks/cargo-check.sh
  types: [rust]
  files: ''
  language: 'script'
- id: cargo-clippy
  name: 'cargo clippy'
  entry: ./hooks/cargo-clippy.sh
  types: [rust]
  files: ''
  language: 'script'
- id: go-build
  name: 'go build'
  entry: ./hooks/go-build.sh
  types: [go]
  files: ''
  language: 'script'
- id: go-fmt
  name: 'go fmt'
  entry: ./hooks/go-fmt.sh
  types: [go]
  files: ''
  language: 'script'
- id: go-imports
  name: 'go imports'
  entry: ./hooks/go-imports.sh
  types: [go]
  files: ''
  language: 'script'
- id: go-mod-tidy
  name: 'go mod tidy'
  entry: ./hooks/go-mod-tidy.sh
  types: [go]
  files: ''
  language: 'script'
- id: go-unit-tests
  name: 'go unit tests'
  entry: ./hooks/go-unit-tests.sh
  types: [go]
  files: ''
  language: 'script'
- id: go-vet
  name: 'go vet'
  entry: ./hooks/go-vet.sh
  types: [go]
  files: ''
  language: 'script'
- id: golangci-lint
  name: 'golangci lint'
  entry: ./hooks/golangci-lint.sh
  types: [go]
  files: ''
  language: 'script'
- id: graphql
  name: 'graphql'
  entry: ./hooks/graphql.sh
  types: []
  files: '\.graphql'
  language: 'script'
- id: hadolint
  name: 'hadolint'
  entry: ./hooks/hadolint.sh
  types: [dockerfile]
  files: ''
  language: 'script'
- id: kingfisher
  name: 'kingfisher'
  entry: ./hooks/kingfisher.sh
  types: []
  files: '.*'
  language: 'script'
- id: markdownlint-cli2
  name: 'markdownlint cli2'
  entry: ./hooks/markdownlint-cli2.sh
  types: [markdown]
  files: ''
  language: 'script'
- id: mdsf
  name: 'mdsf'
  entry: ./hooks/mdsf.sh
  types: [markdown]
  files: ''
  language: 'script'
- id: mypy
  name: 'mypy'
  entry: ./hooks/mypy.sh
  types: [python]
  files: ''
  language: 'script'
- id: nbstripout
  name: 'nbstripout'
  entry: ./hooks/nbstripout.sh
  types: []
  files: '\.ipynb'
  language: 'script'
- id: nix-fmt
  name: 'nix fmt'
  entry: ./hooks/nix-fmt.sh
  types: []
  files: '\.nix$'
  language: 'script'
- id: ruff-check
  name: 'ruff check'
  entry: ./hooks/ruff-check.sh
  types: [python]
  files: ''
  language: 'script'
- id: ruff-format
  name: 'ruff format'
  entry: ./hooks/ruff-format.sh
  types: [python]
  files: ''
  language: 'script'
- id: rumdl
  name: 'rumdl'
  entry: ./hooks/rumdl.sh
  types: [markdown]
  files: ''
  language: 'script'
- id: rust-fmt
  name: 'rust fmt'
  entry: ./hooks/rust-fmt.sh
  types: [rust]
  files: ''
  language: 'script'
- id: shellcheck
  name: 'shellcheck'
  entry: ./hooks/shellcheck.sh
  types: []
  files: '\.sh$'
  language: 'script'
- id: shfmt
  name: 'shfmt'
  entry: ./hooks/shfmt.sh
  types: []
  files: '\.sh$'
  language: 'script'
- id: sqruff-fix
  name: 'sqruff fix'
  entry: ./hooks/sqruff-fix.sh
  types: [sql]
  files: ''
  language: 'script'
- id: sqruff-lint
  name: 'sqruff lint'
  entry: ./hooks/sqruff-lint.sh
  types: [sql]
  files: ''
  language: 'script'
- id: terraform-docs
  name: 'terraform docs'
  entry: ./hooks/terraform-docs.sh
  types: []
  files: '(\.tf|\.terraform\.lock\.hcl)$'
  language: 'script'
- id: terraform-fmt
  name: 'terraform fmt'
  entry: ./hooks/terraform-fmt.sh
  types: []
  files: '(\.tf|\.tfvars)$'
  language: 'script'
- id: terraform-trivy
  name: 'terraform trivy'
  entry: ./hooks/terraform-trivy.sh
  types: []
  files: '(\.tf|\.tfvars)$'
  language: 'script'
- id: terraform-validate
  name: 'terraform validate'
  entry: ./hooks/terraform-validate.sh
  types: []
  files: '\.(tf(vars)?|terraform\.lock\.hcl)$'
  language: 'script'
- id: tofu-fmt
  name: 'tofu fmt'
  entry: ./hooks/tofu-fmt.sh
  types: []
  files: '(\.tf|\.tfvars)$'
  language: 'script'
- id: tofu-validate
  name: 'tofu validate'
  entry: ./hooks/tofu-validate.sh
  types: []
  files: '\.(tf(vars)?|terraform\.lock\.hcl)$'
  language: 'script'
- id: trufflehog
  name: 'trufflehog'
  entry: ./hooks/trufflehog.sh
  types: []
  files: '.*'
  language: 'script'
- id: uv-export
  name: 'uv export'
  entry: ./hooks/uv-export.sh
  types: []
  files: 'uv\.lock$'
  language: 'script'
- id: uv-lock
  name: 'uv lock'
  entry: ./hooks/uv-lock.sh
  types: []
  files: 'pyproject\.toml'
  language: 'script'
- id: yamlfmt
  name: 'yamlfmt'
  entry: ./hooks/yamlfmt.sh
  types: []
  files: '(\.yaml|\.yml)$'
  language: 'script'
- id: yarn-prettier
  name: 'yarn prettier'
  entry: ./hooks/yarn-prettier.sh
  types: []
  files: '\.([jt]sx?|vue)$'
  language: 'script'
